[{"content":"为何再次重建博客？ 是，我知道我上次更新博客是2021年，但是这个博客我的确是没有忘的。（主播只是入狱了）\n实际上这个博客是我在21年暑假用Hugo建的，使用的是Eureka主题。整体效果确实非常不错，但遗憾的是配置过程及其奇怪：虽说有专门的说明文档,但是于我而言这玩意写得实在是不太友好太坏了，准备写邮件去骂.jpg，所以当时我的配置过程纯粹靠蒙，虽说最后还是搞出来了，但确实是一种折磨。\n正好最近几天又想写博客了，就把Hugo又下了回来，结果升级Eureka主题的时候又折磨了好久，还是没整明白。\n使用git submodule下来的Eureka配置后存在的大量报错，不断提示module未定义，反正也看不懂，干脆换主题了。\n因此本次的折腾就再走一遍之前的路，从零开始重建博客，顺带记录下以防之后忘记。\nHugo之安装 “Hugo是由Go语言实现的静态网站生成器。简单、易用、高效、易扩展、快速部署。 ”\n本次我使用的是 Hugo v0.111.2 与 git v2.38.0 ，操作系统为 win 11。在 Hugo 的releases和 Git 的官网都能很方便地下载。我选择的是 hugo_extended_0.111.2_windows-amd64.zip 版本，以便后续折腾。下载完成后将压缩包里的东西解压至你喜欢的目录，再将该目录的路径添加到环境变量中以便后续调用。至于 Git 的安装，我就不再赘述了。\nHugo建站 新建网站 运行 Hugo.exe 后，输入:\nhugo new site ./path //比如我这里就是./exnadio.github.io 运行后便会输出一个网站目录，其结构为（引用自炸鸡人博客）：\n1 2 3 4 5 6 7 8 . ├── archetypes # 存放文章模板 ├── config.toml # 简单的配置文件 ├── content # 存放文章 ├── data # 存放生成静态页面时的配置文件 ├── layouts # 存放页面布局的模板 ├── static # 存放图片等静态内容 └── themes # 存放下载的主题 此时便搭好了一个基础框架，可以进行主题的导入了。\n导入主题 这一步你就可以打开 Hugo Themes 这个网站，选择一个你喜欢的主题，然后跟随着它的说明一步一步配置就大功告成了。那么我们下期再见\n实际上我认为这步是整个 Hugo 建站中最复杂的一步。且每个人选择的主题不尽相同，很难以一个完善的教程（何况我这篇是否算教程也有待考虑）通杀一切，我就分享下我这次的经历好了。 安装主题一般而言存在三种方式：\ngit submodule 安装 go module 安装（需要安装 Go 语言） 本地安装 我个人更推荐第一种方式，考虑到后续升级的难易，这算是最均衡的一种方式。具体的安装方法可以在各主题的说明中找到，我这里安装的是Stack。 在网站目录下，输入：\n1 2 git init git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack 等待下载完成后，便可以进行配置了。假如你想用其他方式安装，也可以参考这里。\nStack本身有全英文的说明文档，我建议是将./themes/hugo-theme-stack/exampleSite/content和./themes/hugo-theme-stack/config.yaml直接夺舍，根据说明与需求修改，会剩下很多时间。\n根据 Stack 的说明文档，Stack后续将改用.toml格式的Config文件，不过其配置步骤基本相同。\n预览网站 很多教程会先教创建文章，不过我觉得配置完主题后还是先预览网站为好。Hugo的一大好处就是可以进行即时预览，你可以看到你每一步修改所产生的变化，也可以看到你是如何把一切搞崩溃的。 输入:\n1 hugo server 即可建立一个本地服务器。\n当然你也可以加上一些 flag 来达到一些其他目的：比如指定主题的--theme=Stack和关闭快速渲染的--disableFastRender等，具体可以查阅文档。\n之后便可以在浏览器里打开http://localhost:1313预览。\n创建文章 Hugo中的文章采用Markdown格式，通过以下命令你可以在./content/post路径下创建一篇文章： hugo new post/rebuild_blog.md 打开后你会发现生成的Markdown文档带有一段FrontMatter部分，具体的意思可以在这里找到。大体上可以认为是文档的一些属性。\n虽然大部分的主题都会帮你配置好 FrontMatter 部分，但是也是有部分主题是需要自行配置的，很不幸，Stack 就是这类主题之一。不过这也没啥关系，修改之前提到的./archetypes/default.md/下的default.md即可。\n生成静态页面 只需输入：\n1 hugo 即可。默认生成位置为./public，你可以在配置文档中使用publishDir参数指定，也可以直接使用-d参数指定。\n发布网站 首先，我不会 git。\n其次，本部分全文抄袭自炸鸡人博客。\n这里用 Github Pages 来部署博客。首先在config.yaml里指定:\npublishDir: docs 然后再一个hugo命令，这样就把静态页面输出到docs目录下了。\n接着在 Github 上以 ZhaJiMan.github.io 的名字（根据自己的用户名而定）新建一\u0026gt;个空仓库，进行下面的 Git 命令:\ngit add . git commit -m \u0026ldquo;first commit\u0026rdquo; git branch -M main git remote add origin https://github.com/ZhaJiMan/ZhaJiMan.github.io.git git push -u origin main 这段改编自空仓库页面出现的提示，大意是:\n将网站目录下的所有内容暂存。 把暂存的内容提交给版本库。 把主分支的名字从 master 改为 main。 添加远程仓库。 把本地内容推送到远程仓库里。 推送成功后，进入仓库的设置页面，点击侧栏的 Pages，再把 Source 选项改为 main 分支下的docs目录，这样 Github Pages 就会根据我们推送上去的docs目录里的静态页面来显示网站。这里指定docs的好处是还可以把网站的所有文件都备份到仓库里（不包含以 submodule 形式添加主题，详见参考链接）。最后在与仓库同名的网站 https://zhajiman.github.io/ 上看看自己的博客吧！\n我补充几个细节：\ngit push -u origin master //我采用了master分支后是要验证github账号的（也许只有首次有？），假如你没有，那么我建议你读第2点。 Github是有带GUI的客户端的，git苦手可以考虑用这个。 Stack主题自定义 首先放一下对比图：\n改善浅色模式可读性 配置完 Stack 后，我并不是很满意，假如说满分100的话我只能打个70分左右。最大的不满在于其浅色模式下可读性实在是过于糟糕,你可以在 Demo网站 上感受一下，我不清楚为什么作者采用了#bababa这个颜色，导致其与背景的对比度来到了可怜的1.94，简直就是一场彻头彻尾的灾难。\n不过好在 Stack 主题预留了自定义的空间，详见官网的说明。这里具体介绍下自定义的方法：\n在Stack以及很多主题中，主题文件夹下的assets/scss下都提供了一个供用户自定义的custom.scss文件。\n原理便是在最后引入这个文件，使其位于最终css文件的末尾，从而覆盖原先的属性，达到“自定义”的效果。\n因此，想要自定义就很简单了：找到你希望修改的元素和它对应的选择器，重新定义这个选择器即可。\n万幸，目前的浏览器为我们提供了好用的开发者工具。以我现在使用的Edge为例，按下F12弹出开发者工具，使用左上角的小箭头使你的鼠标变成一个查看器(你也可以使用SHIFT+CTRL+C的组合键)，只要将光标置于你想修改的元素上，就能找到该元素的源代码。\n例如我现在想改浅色模式下的文本颜色，只需选择一段文本,就能在右下角找到它对应的css:\n可以看到文本被指定为---body-text-color。\n再顺藤摸瓜找到对应的颜色控制：\n把要修改的部分直接复制出来放进custom.scss文件中，修改下即可。比如我使用的就是一套 volvo 色：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 :root { --body-background: #EBEBEB; --accent-color: #1B365D; --accent-color-darker: #202A44; --accent-color-text: #FFF; --body-text-color: #202A44; } :root { --card-background: #FFF; --card-background-selected: #EBEBEB; --card-text-color-main: #202A44; --card-text-color-secondary: #53565A; --card-text-color-tertiary: #888B8D; } 此时就能达到这种效果了：\n修改网站布局 原先挤满所有空间的布局我不喜欢，遂改。 这里使用仙贝的代码，一样是在custom.scss中添加：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 .container { margin-left: auto; margin-right: auto; \u0026amp;.extended { /* range: 768-1024 */ @include respond(md) { max-width: 1024px; --left-sidebar-max-width: 25%; --right-sidebar-max-width: 30%; } /* range: 1024-1280 */ @include respond(lg) { max-width: 1280px; --left-sidebar-max-width: 25%; --right-sidebar-max-width: 22%; } } \u0026amp;.compact { @include respond(md) { --left-sidebar-max-width: 25%; max-width: 768px; } @include respond(lg) { max-width: 1024px; --left-sidebar-max-width: 20%; } @include respond(xl) { max-width: 1280px; } } } 即可。\n老头滚动条修改 同上，不喜欢，仙贝代码，添加：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 html{ ::-webkit-scrollbar { width: 20px; } ::-webkit-scrollbar-track { background-color: transparent; } ::-webkit-scrollbar-thumb { background-color: #d6dee1; border-radius: 20px; border: 6px solid transparent; background-clip: content-box; } ::-webkit-scrollbar-thumb:hover { background-color: #a8bbbf; } } 图标添加 Stack主题带了几个很好看的Tabler图标，可惜并不全，部分缺失的图标要手动添加。\n例如我想添加一个比比汗丽丽的图标，在Tabler官网搜索发现居然真有：\n将svg文件其下载到主题中的.assets\\icons中，再调用即可。\n目前仍未完成的部分 当然目前这个网站仍存在以下问题以及遗憾：\n过往文章未恢复 评论系统未接入 部分界面还未配置好 网站图标未设置（其实是还没做） 没有文章修改时间显示 洋文站点还没完成 Category机制还没搞懂 以上，下次大概的确会修复！\n预告部分 主题配置历程 Markdown小教程 つづく\n","date":"2023-04-22T14:56:05+08:00","image":"https://oxidane-uni.github.io/images/4featureimg/azl.jpg","permalink":"https://oxidane-uni.github.io/p/%E4%BD%BF%E7%94%A8-hugo-%E5%AF%B9%E5%8D%9A%E5%AE%A2%E7%9A%84%E9%87%8D%E5%BB%BA%E4%B8%8E-stack-%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96%E8%AE%B0%E5%BD%95/","title":"使用 Hugo 对博客的重建与 Stack 主题优化记录"}]